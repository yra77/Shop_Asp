@inject IHttpContextAccessor HttpContextAccessor
@inject DataManager _dataManager

@model Login

@{
    ViewData["Title"] = "Checkout";
    var session = HttpContextAccessor.HttpContext.Session.Get<bool>("IsLogin") | false;
    var totalsum = HttpContextAccessor.HttpContext.Session.Get<int>("TotalsumCart") | 0;
}

<div class="container">


    @if (session)
    {
        if (totalsum > 0)
        {

            <div class="card mt-2 col-md-5 m-auto shadow-sm">

                <h6 class="mt-3 ms-3 text-secondary">Contact details</h6>

                <div class="card-body ">
                    <div class="row m-auto">

                        <form class="w-100">
                            <div class="form-floating">
                                <input type="text"
                                       class="form-control shadow-none"
                                       value="@Model.UserName" />
                                <label class="form-label">Name</label>
                            </div>

                            <div class="form-floating mt-2">
                                <input type="text"
                                       class="form-control shadow-none" />
                                <label class="form-label">Second Name</label>
                            </div>

                            <div class="form-floating mt-2 mb-2">
                                <input type="tel"
                                       class="form-control shadow-none" />
                                <label class="form-label">Phone +0000000000</label>
                            </div>

                            <small class="mt-3 text-secondary">Address click to map</small>
                            <textarea type="text"
                                      id="address"
                                      class="form-control shadow-none ">
                                        </textarea>

                            <div id="mymap" class="w-100 mt-2" style="height:15em"></div>
                        </form>

                    </div>
                </div>
            </div>

            <h5 class="text-secondary mt-5 mb-5">Total: <span class="fw-bold text-black" id="texttotal">@totalsum</span>$</h5>

            <input type="button" value="Confirm" class="btn btn-info text-white text-center w-100 mb-5 shadow-none"/>
        }
        else
        {
            <h4 class="text-info text-center mt-5">You haven't chosen anything yet</h4>
        }
    }
    else
    {
        <h4 class="text-info text-center mt-5">You must log in</h4>
    }

</div>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDcSVIjErUsWelFNRTTqKJimfh9lDj7JJ0&v=3.exp&v=weekly"></script>

<script>
    $(this).on("load", function () {


        let infoWindow = new google.maps.InfoWindow();
        let pos = "";
        let marker = "";
        const locationButton = document.createElement("button");

        locationButton.textContent = "Pan to Current Location";
        locationButton.classList.add("custom-map-control-button");

        Location();

        locationButton.addEventListener("click", (e) => {
            e.preventDefault();
            Location();
        });


        //found location
        function Location() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    (position) => {
                        pos = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude,
                        };

                        CreateMap(pos);
                    },
                    () => {
                        handleLocationError(true, infoWindow, map.getCenter());
                    }
                );
            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindow, map.getCenter());
            }
        }

        //create map
        function CreateMap(pos) {

            let mapOptions = {
                center: pos,
                zoom: 15,
                minZoom: 15,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };

            let map = new google.maps.Map(document.getElementById("mymap"), mapOptions);
            map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);

            google.maps.event.addListener(map, 'click', function (event) {
                marker.setMap(null);//remove prev marker
                Marker(event.latLng, map);
            });

            //Set Marker on the Map
            Marker(pos, map);
        }

        //set marker
        function Marker(pos, map) {

            const geocoder = new google.maps.Geocoder();
            geocoder.geocode({ location: pos })
                .then((response) => {
                    if (response.results[0]) {
                        // console.log(response.results[0].formatted_address);
                        document.getElementById("address").value = response.results[0].formatted_address;
                    } else {
                        window.alert("No results found");
                    }
                })
                .catch((e) => window.alert("Geocoder failed due to: " + e));

            marker = new google.maps.Marker({
                position: pos,
                animation: google.maps.Animation.BOUNCE,
            });

            marker.setMap(map);
        }

        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            infoWindow.setPosition(pos);
            infoWindow.setContent(
                browserHasGeolocation
                    ? "Error: The Geolocation service failed."
                    : "Error: Your browser doesn't support geolocation."
            );
            infoWindow.open(map);
        }
        // var markers = @Html.Raw(ViewBag.Markers);
    });
</script>  