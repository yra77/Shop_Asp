
@inject IHttpContextAccessor HttpContextAccessor
@inject DataManager _dataManager

@{
    var carts = 0;
    var shopData = _dataManager.ShopRepo.GetShopData().ToList()[0];
    var brands = _dataManager.BrandsRepo.GetBrands();
    var session = HttpContextAccessor.HttpContext.Session.Get<bool>("IsLogin") | false;
    if (session)
    {
        carts = HttpContextAccessor.HttpContext.Session.Get<List<Cart>>("UserCart").Count;
    }
}

<header>
    <nav class="navbar navbar-expand-md navbar-toggleable-md navbar-light bg-white border-bottom box-shadow mb-3">

        <div class="container-fluid">

            <a class="navbar-brand logo" asp-area="" asp-controller="Home" asp-action="Index">
                <img src="~/Images/@shopData.LogoImgPath"
                     height="25"
                     width="25"
                     className=""
                     alt="Logo Shop" />
                <small class="d-block">@shopData.Title</small>
            </a>

            <button class="navbar-toggler"
                    type="button"
                    data-bs-toggle="collapse"
                    data-bs-target=".navbar-collapse"
                    aria-controls="navbarSupportedContent"
                    aria-expanded="false"
                    aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="navbar-collapse collapse d-md-inline-flex justify-content-between">
                <ul class="navbar-nav flex-grow-1">
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Products" asp-action="Index" asp-route-id="">Products</a>
                    </li>
                    @if (session)
                    {
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="Identity" asp-controller="Cart" asp-action="Index">Cart</a>
                        </li>
                    }
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="About">About</a>
                    </li>
                    <li class="nav-item">
                        @if (!session)
                        {
                            <a class="nav-link text-success fw-bold" asp-area="" asp-controller="Home" asp-action="AuthUser">Login</a>
                        }
                        else
                        {
                            <a class="nav-link text-danger fw-bold" asp-area="" asp-controller="Home" asp-action="Logout">Logout</a>
                        }
                    </li>
                </ul>

                <div class="heder_search_filter justify-content-center">

                    <input type="image"
                           class="btnFilter"
                           src="~/Images/filter.png"
                           alt="filters"
                           onclick="ClickModal_Filter()" />

                    <input type="text"
                           name="search"
                           placeholder="search"
                           class="searchInp border-secondary bg-transparent shadow-none"
                           onclick="OnFocusInp_Search(event)" />

                    <button type="button"
                            class="btn btn-sm btn-outline-secondary shadow-none mb-1"
                            onclick="ClickStartSearch()">
                        Search
                    </button>

                </div>

            </div>
        </div>
    </nav>

    <div class="text-center mt-2 mb-4">
        @foreach (var brand in brands)
        {
            <a asp-area=""
           asp-controller="Products"
           asp-action="Index"
           asp-route-id="@brand.NameBrand"
               class="text-decoration-none">

                <img class="brandsImg border border-info rounded-pill"
                     src="~/Images/@brand.LogoBrands"
                     data-id="@brand.NameBrand"
                     width="50"
                     height="30"
                     alt="@brand.NameBrand" />
            </a>
        }
    </div>

    @await Component.InvokeAsync("Modal",  new { parameters=await Component.InvokeAsync("Filter"), isMessage=false})

    @if (session)
    {
        <a class="btn rounded-circle iconCartBtn shadow-none" asp-area="Identity" asp-controller="Cart" asp-action="Index">
            <img height=18 width=18 src="~/Images/cart.png" alt="icon cart" />
            <Badge class="fs-4 text-danger fw-bold" id="cartBadge">@carts</Badge>
        </a>
    }

    <img id="buttonScrollTop" src='~/Images/ic_up.png' alt="arrow up" />
    
    @if (HttpContextAccessor.HttpContext.Request.Path != "/")//не показуємо кнопку якщо ми на сторінці - home '/'
    {
        <button type="submit" 
                class="btn btn-secondary btn-sm mb-3 ms-4 shadow-none" 
                onClick="history.go(-1); return false;"
                >
                Back
        </button>
    }
</header>

<script>
 
   $(this).on("load", function(){

        let path = document.location.pathname.split('/').pop();
       //console.log(path);
       let aElems = document.getElementsByTagName("a");
       
       for(let i = 0; i < aElems.length; i++)
       {
           if(path === aElems[i].innerText
           || (path === "" && aElems[i].innerText === "Home")
           || (path === "AuthUser" && aElems[i].innerText === "Login")) 
           {
                aElems[i].className += " active";
           }
       }
   });


    let searchStr = "";
    //Hide Back to top button
    $("#buttonScrollTop").hide();

    function ClickModal_Filter() {
        $('#modal').modal('show');
    }

    function CloseModal() {
        $('#modal').modal('hide');
        $('#modal').modal('dispose');
    }

    function OnFocusInp_Search(event) {
        var inp = event.target;
        let nameReg = new RegExp("[sa-zA-Z0-9]");

        inp.addEventListener("input", (e) => {
            if (!nameReg.test(e.data)) {
                inp.value = inp.value.replace(e.data, '');
            }
            searchStr = inp.value;
        });
    }

    function ClickStartSearch() {
        let filterData = JSON.stringify({
            SearchStr: searchStr,
            Genders: new Array(),
            Brands: new Array(),
            Sizes: new Array(),
            MinMaxPrice: new Array()
        });

        $.ajax({
            type: "post",
            url: '@Url.Action("Index", "Products")',
            contentType: "application/json",
            data: filterData,
            async: true,
            cache: false,
            success: function (result) {
                if (result === 'No') {
                }
                else {
                    window.location.href = '@Url.Action("Index", "Products")';
                }
                console.log(result);
            },
            error: function (jqXHR, textStatus, errorThrown) {

                console.error(jqXHR);
            }
        });
    }

    $(document).ready(function () {

        $(window).scroll(function () {
            if ($(window).scrollTop() > 100) {
                $("#buttonScrollTop").fadeIn();
            } else {
                $("#buttonScrollTop").fadeOut();
            }
        });

        $("#buttonScrollTop").on("click", function () {
            window.scrollTo({ top: 0, behavior: "smooth" });
        });
    });


</script>